{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","class","src","alt","slice","map","genre","index","App","useState","isLoading","setIsLoading","movies","setMovies","useEffect","a","axios","get","data","className","movie","id","medium_cover_image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGe,SAASA,EAAT,GAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3D,OAAQ,sBAAKC,MAAM,QAAX,UACN,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,MAAM,cAAX,UACE,oBAAIA,MAAM,eAAV,SAA0BJ,IAC1B,oBAAII,MAAM,cAAV,SAAyBL,IACzB,oBAAGK,MAAM,iBAAT,UAA2BH,EAAQM,MAAM,EAAG,KAA5C,SACA,oBAAIH,MAAM,gBAAV,SAA2BD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OAAkB,6BAAiBD,GAARC,c,MCgCxDC,MArCf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAYb,OARAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,sEACwCC,IAAMC,IAAI,4DADlD,gBACsBL,EADtB,EACQM,KAAOA,KAAON,OACrBC,EAAUD,GAFX,0CAAD,GAIAD,GAAa,KACZ,IAGD,yBAASQ,UAAU,YAAnB,SACGT,EACC,qBAAKT,MAAM,SAAX,SACE,sBAAMA,MAAM,eAAZ,4BAGF,qBAAKA,MAAM,SAAX,SACIW,EAAOP,KAAI,SAAAe,GAAK,OAChB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,QANToB,EAAMC,YCtBzBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fdcf207d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./Movie.css\"\n\nexport default function Movie({year, title, summary, poster, genres}) {\n  return (<div class=\"movie\">\n    <img src={poster} alt={title} title={title} />\n    <div class=\"movie__data\">\n      <h3 class=\"movie__title\">{title}</h3>\n      <h5 class=\"movie__year\">{year}</h5>\n      <p class=\"movie__summary\">{summary.slice(0, 180)}...</p>\n      <ul class=\"movie__genres\">{genres.map((genre, index) => <li key={index}>{genre}</li>)}</ul>\n    </div>\n  </div>)\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      setMovies(movies);\n    })();\n    setIsLoading(false);\n  }, []);\n  \n  return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div class=\"loader\">\n          <span class=\"loader__text\">\"Loading...\"</span>\n        </div>\n       ) : (\n        <div class=\"movies\">\n          { movies.map(movie => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}